#!/usr/bin/env ruby
# frozen_string_literal: true

require 'net/http'
require 'oj'

require 'iv/plurk'
require 'iv/plurk/command_option'
require 'iv/plurk/webhook'

Oj.default_options = { mode: :rails }

# TODO: Wrapper into class
option = IV::Plurk::CommandOption.load
raise 'Webhook URL not configured' if option.webhook_url.nil?

credential = IV::Plurk::Credential.new(
  consumer_key: option.consumer_key,
  consumer_secret: option.consumer_secret,
  oauth_token: option.oauth_token,
  oauth_secret: option.oauth_secret
)

client = IV::Plurk::Client.new(credential)

continue = true

Signal.trap(:TERM) { continue = false }
Signal.trap(:INT) { continue = false }

webhook = IV::Plurk::Webhook.new(option.webhook_url)
webhook.start

puts 'Starting subscribe timeline'

IV::Plurk.use(client) do
  IV::Plurk::Realtime.subscribe do |res|
    puts 'Receive new Plurk events'
    webhook.enqueue(res.fetch('data', []))
    continue
  end
end

puts 'Bye!'
